{"version":3,"file":"static/js/966.0a7b0ce0.chunk.js","mappings":"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","sources":["components/ContactsForm/Form.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsForm/Form.jsx","../node_modules/nanoid/index.browser.js","components/Contacts/ContactsList.styled.jsx","components/Contacts/ContactsItem.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactsList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: block;\n  width: 400px;\n  height: auto;\n  padding: 20px;\n  outline: 3px solid #1c2f50;\n  border-radius: 5px;\n  background: #1c2f50;\n`;\n\nexport const Input = styled.input`\n  width: 380px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  border-radius: 20px;\n  outline: none;\n  border: none;\n  background: rgba(129, 225, 247, 1);\n  color: #1c2f50;\n  padding: 10px;\n  font-size: 18px;\n`;\n\nexport const Label = styled.label`\n  text-align: initial;\n  display: block;\n  margin-bottom: 30px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 80px;\n  width: 250px;\n  color: #1c2f50;\n  background: rgba(129, 225, 247, 1);\n  padding: 15px;\n  border-radius: 20px;\n  font-size: 24px;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  :focus {\n    color: yellow;\n  }\n`;\nexport const Span = styled.span`\n  margin-bottom: 5px;\n  font-weight: 700;\n  font-size: 24px;\n  display: block;\n  margin-bottom: 5px;\n  color: rgba(129, 225, 247, 1);\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectStatusFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectStatusFilter],\n  (contacts, filter) => {\n    if (!filter) return contacts;\n\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n);\n","import { useState } from 'react';\nimport { Button, Form, Input, Label, Span } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { fetchAddContact } from 'redux/contacts/operations';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.form.elements.name.value;\n    const phone = event.target.form.elements.number.value;\n    const data = {name: name, number: phone };\n\n    let normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      clearStateName();\n      return alert(`${name} is already in contacts.`);\n    }\n\n    dispatch(fetchAddContact(data));\n    clearState();\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case `name`:\n        setName(e.target.value);\n        break;\n      case `number`:\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const clearState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const clearStateName = () => {\n    setName('');\n  };\n\n  return (\n    <>\n      <Form>\n        <Label htmlFor=\"\">\n          <Span>Name</Span>\n          <Input\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. \nFor example Adrian, Jacob Mercer, Charles de Batz de Castelmore \nd'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"\">\n          <Span>Number</Span>\n\n          <Input\n            value={phone}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can \nstart with +\"\n            required\n          />\n        </Label>\n        <Button type=\"button\" onClick={handleSubmit}>\n          Add contact\n        </Button>\n      </Form>\n    </>\n  );\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  gap: 10px;\n  display: flex;\n  width: 850px;\n  height: auto;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  flex-wrap: wrap;\n  color: rgba(129, 225, 247, 1);\n`;\n\nexport const Item = styled.li`\n  width: 400px;\n  padding: 5px 10px;\n  background-color: #1c2f50;\n  border-radius: 4px;\n`;\n\nexport const Span = styled.span`\n  margin-right: auto;\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  margin-left: auto;\n  background-color: rgba(129, 225, 247, 1);\n  border-radius: 4px;\n  padding: 3px;\n  color: #1c2f50;\n`;\n\nexport const ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  width: auto;\n  height: auto;\n  font-size: 32px;\n  color: rgba(129, 225, 247, 1);\n  background: #1c2f50;\n  padding: 20px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const ContainerContacts = styled.div`\n  outline: 3px solid #1c2f50;\n  border-radius: 5px;\n`;\nexport const Text = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  color: #1c2f50;\n`;\nexport const ContainerMassage = styled.div`\n  padding: 0px 20px 20px 20px;\n`;","import { Span, Item, Button, ItemContainer } from './ContactsList.styled';\n\nexport const ContactsItem = ({ name, number, id, onClick }) => {\n  return (\n    <>\n      <Item id={id}>\n        <ItemContainer>\n          <Span>{name}</Span>\n          {number}\n          <Button onClick={() => onClick(id)} type=\"button\">\n            Delete contact\n          </Button>\n        </ItemContainer>\n      </Item>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  padding-left: 20px;\n`;\nexport const Input = styled.input`\n  width: 221px;\n  height: 30px;\n  font-size: 24px;\n  border-color: inherit;\n  border-style: none;\n  background: rgba(129, 225, 247, 1);\n  padding: 10px;\n  border-radius: 0px 5px 5px 0px;\n  border: 2px solid #1c2f50;\n  color: #1c2f50;\n  outline: none;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 20px;\n  border-radius: 5px;\n`;\n\nexport const Span = styled.span`\n  font-size: 24px;\n  font-weight: 700;\n  background: #1c2f50;\n  padding: 9px;\n  color: rgba(129, 225, 247, 1);\n  border-radius: 5px 0px 0px 5px;\n`;\n","import { FilterContainer, Input, Label, Span } from 'components/Filter/Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    dispatch(setStatusFilter(evt.target.value));\n  };\n  return (\n    <FilterContainer>\n      {/* <Title>Finde contact</Title> */}\n      <Label htmlFor=\"\">\n        <Span> Finde contact</Span>\n        <Input type=\"text\" onChange={handleFilter} />\n      </Label>\n    </FilterContainer>\n  );\n};\n","import { nanoid } from 'nanoid';\nimport { ContactsItem } from './ContactsItem';\nimport { ContainerContacts, List, Title, Text, ContainerMassage } from './ContactsList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilteredContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchDeleteContact } from 'redux/contacts/operations';\nimport { Filter } from 'components/Filter/Filter';\n\nexport const ContactsList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n  return (\n    <>\n      <ContainerContacts>\n        <Title>Contacts</Title>\n        <Filter />\n        <ContainerMassage>\n          {error ? (\n            <Text>{error}</Text>\n          ) : isLoading && !error ? (\n            <Text>Request in progress...</Text>\n          ) : contacts.length === 0 ? (\n            <Text>The phonebook is empty. Please add a contact.</Text>\n          ) : (\n            filteredContacts.length === 0 && <Text>Contact not found</Text>\n          )}\n        </ContainerMassage>\n\n        {contacts.length > 0 && (\n          <List>\n            {filteredContacts.map(({ name, number, id }) => (\n              <ContactsItem\n                key={nanoid()}\n                name={name}\n                number={number}\n                id={id}\n                onClick={removeContact}\n              />\n            ))}\n          </List>\n        )}\n      </ContainerContacts>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerPhoneBook = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 30px;\n  padding: 16vh 14vw;\n`;\n\n\n\n\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/ContactsForm/Form';\n\n// import {\n  // selectContacts,\n  // selectError,\n  // selectFilteredContacts,\n  // selectIsLoading,\n// } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport { ContainerPhoneBook } from './Contacts.styled';\n\n// import { selectLoading } from 'redux/tasks/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  // const contacts = useSelector(selectContacts);\n  // const filteredContacts = useSelector(selectFilteredContacts);\n  // const isLoading = useSelector(selectIsLoading);\n  // const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContainerPhoneBook>\n        <ContactForm />\n          <ContactsList />\n      </ContainerPhoneBook>\n    </>\n  );\n}"],"names":["Form","styled","Input","Label","Button","Span","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","filter","toLowerCase","includes","ContactForm","useState","setName","phone","setNumber","dispatch","useDispatch","useSelector","handleChange","e","target","clearState","clearStateName","htmlFor","onChange","type","pattern","title","required","onClick","event","preventDefault","form","elements","data","number","normalizedName","contact","alert","fetchAddContact","List","Item","ItemContainer","Title","ContainerContacts","Text","ContainerMassage","ContactsItem","id","FilterContainer","Filter","evt","setStatusFilter","ContactsList","filteredContacts","removeContact","fetchDeleteContact","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","ContainerPhoneBook","Contacts","useEffect","fetchContacts"],"sourceRoot":""}